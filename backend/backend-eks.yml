apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
spec:
  replicas: 2  # 실행할 백엔드 컨테이너 수
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      nodeSelector:
        app: backend
      containers:
        - name: backend
#          image: ckdgkim/backendproject:back-1  # 백엔드 Docker 이미지
          image: ckdgkim/backendproject:back-PLACEHOLDER_TAG
          # 이 부분이 동적으로 업데이트됨
          env:
            - name: DB_HOST
              value: "mysql-service"  # MySQL 서비스 이름 (Kubernetes 내부 네트워크에서 연결)
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              value: "root"
            - name: DB_PASSWORD
              value: "1234"
            - name: MONGODB_URI
              value: "mongodb://mongodb-service:27017/mydb"  # MongoDB 연결 URI
            - name: REDIS_HOST
              value: "redis-container"  # Redis 서비스 이름
          ports:
            - containerPort: 8080  # 애플리케이션 포트
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8080  # 외부에서 접근할 포트
      targetPort: 8080  # 컨테이너 내부 애플리케이션 포트
      nodePort: 30000  # 선택적, Kubernetes가 포트를 자동으로 할당
#  type: LoadBalancer  # NodePort에서 LoadBalancer로 변경
#  loadBalancerClass: alb  # ALB로 지정 (AWS에서 ALB를 사용하도록 설정)
  type: NodePort  # 노드 IP를 통해 접근 가능

#---
#apiVersion: networking.k8s.io/v1
#kind: Ingress
#metadata:
#  name: backend-ingress
#  annotations:
#    # ALB에 대한 설정
#    alb.ingress.kubernetes.io/scheme: internet-facing  # ALB가 인터넷-facing일 경우
#    alb.ingress.kubernetes.io/target-type: ip  # ALB에서 IP로 라우팅
#    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'  # ALB가 HTTP 포트로 트래픽 수신
#    alb.ingress.kubernetes.io/subnets: subnet-0e14422b83b8b2b1a,subnet-01304e47c4dbbacc7  # ALB가 사용할 서브넷
#spec:
#  rules:
#    - host: my-backend.example.com  # ALB가 라우팅할 도메인
#      http:
#        paths:
#          - path: /  # 모든 경로에 대해
#            pathType: Prefix
#            backend:
#              service:
#                name: backend-service  # 연결할 서비스 이름
#                port:
#                  number: 8080  # 서비스의 포트